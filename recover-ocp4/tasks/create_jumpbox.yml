---

- name: Create Jumpbox
  hosts: localhost
  gather_facts: false
  vars:
    cluster_region: "us-east-2"
    cluster_vpc: "vpc-04ed4285a2858ac00"

  tasks:
    - name: Put the cluster keypair in AWS for jumphost
      ec2_key:
        name: cluster_keypair
        key_material: "{{ lookup('file', cluster_key_filename) }}"

    - name: Create SSH security group
      ec2_group:
        name: jumpbox
        description: jumpbox description
        region: "{{ cluster_region }}"
        vpc_id: "{{ cluster_vpc }}"
        rules:
          - proto: tcp
            ports: 22
            cidr_ip: 0.0.0.0/0
      register: sg_jumpbox

    - name: get vpc_subnet_id
      ec2_vpc_subnet_facts:
        filters:
          vpc-id: "{{ sg_jumpbox.vpc_id }}"
          cidr-block: "10.0.0.0/20"
      register: ec2_vpc_subnet_ids

    - name: debug me
      debug: 
        var: ec2_vpc_subnet_ids
        verbosity: 4

    - name: launch ec2 instance
      ec2:
        key_name: "cluster_keypair"
        instance_type: t2.micro
        group_id: "{{ sg_jumpbox.group_id }}"
        image: ami-0520e698dd500b1d1
        wait: true
        region: "{{ cluster_region }}"
        vpc_subnet_id: "{{ ec2_vpc_subnet_ids.subnets[0].subnet_id }}"
        assign_public_ip: yes
      register: ec2

    - name: Add all instance public IPs to host group
      add_host: hostname={{ item.public_ip }} groups=jumpbox
      loop: "{{ ec2.instances }}"

    - name: Wait for SSH to come up
      set_fact:
        ansible_python_interpreter: /usr/libexec/platform-python
      delegate_to: "{{ ec2.instances }}"
      wait_for_connection:
        delay: 10
        timeout: 180
      loop: "{{ ec2.instances }}"

    #  - name: Configure instance(s)
    #    become: True
    #    gather_facts: True
    #    debug:
    #      - my_awesome_role
    #      - my_awesome_test
    #
    #- name: Terminate instances
    #  hosts: localhost
    #  tasks:
    #    - name: Terminate instances that were previously launched
    #      ec2:
    #        state: 'absent'
    #
    #- name: "Delete group by its id"
    #  ec2_group:
    #    region: eu-west-1
    #    group_id: sg-33b4ee5b
    #    state: absent
